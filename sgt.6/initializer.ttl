# baseURI: http://sgt.6/initializer
# imports: http://sgt.6/20160614/component-collection-all
# imports: http://sgt.6/explanations
# imports: http://sgt.6/rules
# imports: http://spinrdf.org/spl
# prefix: initializer

@prefix afn: <http://jena.hpl.hp.com/ARQ/function#> .
@prefix arg: <http://spinrdf.org/arg#> .
@prefix eiclasses---energy_interoperation_wd36_pr03: <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/eiclasses---energy_interoperation_wd36_pr03#> .
@prefix fn: <http://www.w3.org/2005/xpath-functions#> .
@prefix initializer: <http://sgt.6/initializer#> .
@prefix measurements---common_primitive_types_classes_and_enumerations: <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/measurements---common_primitive_types_classes_and_enumerations#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix power_measurements---measurements: <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/power_measurements---measurements#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rules: <http://sgt.6/rules#> .
@prefix smf: <http://topbraid.org/sparqlmotionfunctions#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix spif: <http://spinrdf.org/spif#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix spl: <http://spinrdf.org/spl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://sgt.6/initializer>
  rdf:type owl:Ontology ;
  rdfs:comment "This rule set contains a bunch of initialization rules to make example-making less tedious"^^xsd:string ;
  owl:imports <http://sgt.6/20160614/component-collection-all> ;
  owl:imports <http://sgt.6/explanations> ;
  owl:imports <http://sgt.6/rules> ;
  owl:imports <http://spinrdf.org/spl> ;
  owl:versionInfo "Created with TopBraid Composer"^^xsd:string ;
.
spin:ruleWave1
  rdf:type spin:RuleProperty ;
  spin:nextRuleProperty spin:ruleWave2 ;
  rdfs:subPropertyOf spin:rule ;
.
spin:ruleWave2
  rdf:type spin:RuleProperty ;
  spin:nextRuleProperty spin:rule ;
  rdfs:subPropertyOf spin:rule ;
.
<http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/collections_rulesets_and_aggregations---energy_manager_component#Aggregation>
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object "Standard Aggregations" ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasNameType> ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:notExists ;
                sp:elements (
                    [
                      sp:object [
                          sp:varName "val"^^xsd:string ;
                        ] ;
                      sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasNameType> ;
                      sp:subject spin:_this ;
                    ]
                  ) ;
              ] ;
          ]
        ) ;
      rdfs:comment "001 Assign NameType of \"Standard Aggregations\""^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "value"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/collections_rulesets_and_aggregations---energy_manager_component#hasAggregateQuantityRef> ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "existingVal"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/collections_rulesets_and_aggregations---energy_manager_component#hasAggregateQuantityRef> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "type"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "restriction"^^xsd:string ;
              ] ;
            sp:predicate rdfs:subClassOf ;
            sp:subject [
                sp:varName "type"^^xsd:string ;
              ] ;
          ]
          [
            sp:object owl:Restriction ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "restriction"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "range"^^xsd:string ;
              ] ;
            sp:predicate owl:allValuesFrom ;
            sp:subject [
                sp:varName "restriction"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "property"^^xsd:string ;
              ] ;
            sp:predicate owl:onProperty ;
            sp:subject [
                sp:varName "restriction"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type afn:localname ;
                sp:arg1 [
                    sp:varName "property"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "propName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type fn:contains ;
                sp:arg1 [
                    sp:varName "propName"^^xsd:string ;
                  ] ;
                sp:arg2 "hasAggregateQuantityRef" ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:ne ;
                sp:arg1 [
                    sp:varName "property"^^xsd:string ;
                  ] ;
                sp:arg2 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/collections_rulesets_and_aggregations---energy_manager_component#hasAggregateQuantityRef> ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "value"^^xsd:string ;
              ] ;
            sp:predicate [
                sp:varName "property"^^xsd:string ;
              ] ;
            sp:subject spin:_this ;
          ]
        ) ;
      rdfs:comment "002 Copy hasAggregateQuantityRef from the redefined property to the overwritten property to avoid a constraint violation"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "value"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/collections_rulesets_and_aggregations---energy_manager_component#hasAggregationRulesetRef> ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "existingVal"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/collections_rulesets_and_aggregations---energy_manager_component#hasAggregationRulesetRef> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "type"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "restriction"^^xsd:string ;
              ] ;
            sp:predicate rdfs:subClassOf ;
            sp:subject [
                sp:varName "type"^^xsd:string ;
              ] ;
          ]
          [
            sp:object owl:Restriction ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "restriction"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "range"^^xsd:string ;
              ] ;
            sp:predicate owl:allValuesFrom ;
            sp:subject [
                sp:varName "restriction"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "property"^^xsd:string ;
              ] ;
            sp:predicate owl:onProperty ;
            sp:subject [
                sp:varName "restriction"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type afn:localname ;
                sp:arg1 [
                    sp:varName "property"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "propName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type fn:contains ;
                sp:arg1 [
                    sp:varName "propName"^^xsd:string ;
                  ] ;
                sp:arg2 "hasAggregationRulesetRef" ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:ne ;
                sp:arg1 [
                    sp:varName "property"^^xsd:string ;
                  ] ;
                sp:arg2 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/collections_rulesets_and_aggregations---energy_manager_component#hasAggregationRulesetRef> ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "value"^^xsd:string ;
              ] ;
            sp:predicate [
                sp:varName "property"^^xsd:string ;
              ] ;
            sp:subject spin:_this ;
          ]
        ) ;
      rdfs:comment "003 Copy hasAggregationRulesetRef  from the redefined property to the overwritten property to avoid a constraint violation"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "value"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/collections_rulesets_and_aggregations---energy_manager_component#hasCollectionRef> ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "existingVal"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/collections_rulesets_and_aggregations---energy_manager_component#hasCollectionRef> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "type"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "restriction"^^xsd:string ;
              ] ;
            sp:predicate rdfs:subClassOf ;
            sp:subject [
                sp:varName "type"^^xsd:string ;
              ] ;
          ]
          [
            sp:object owl:Restriction ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "restriction"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "range"^^xsd:string ;
              ] ;
            sp:predicate owl:allValuesFrom ;
            sp:subject [
                sp:varName "restriction"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "property"^^xsd:string ;
              ] ;
            sp:predicate owl:onProperty ;
            sp:subject [
                sp:varName "restriction"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type afn:localname ;
                sp:arg1 [
                    sp:varName "property"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "propName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type fn:contains ;
                sp:arg1 [
                    sp:varName "propName"^^xsd:string ;
                  ] ;
                sp:arg2 "hasCollectionRef" ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:ne ;
                sp:arg1 [
                    sp:varName "property"^^xsd:string ;
                  ] ;
                sp:arg2 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/collections_rulesets_and_aggregations---energy_manager_component#hasCollectionRef> ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "value"^^xsd:string ;
              ] ;
            sp:predicate [
                sp:varName "property"^^xsd:string ;
              ] ;
            sp:subject spin:_this ;
          ]
        ) ;
      rdfs:comment "004 Copy hasCollectionRef from the redefined property to the overwritten property to avoid a constraint violation"^^xsd:string ;
    ] ;
.
<http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/collections_rulesets_and_aggregations---energy_manager_component#Collection>
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object "Standard Collections" ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasNameType> ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:notExists ;
                sp:elements (
                    [
                      sp:object [
                          sp:varName "val"^^xsd:string ;
                        ] ;
                      sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasNameType> ;
                      sp:subject spin:_this ;
                    ]
                  ) ;
              ] ;
          ]
        ) ;
      rdfs:comment "001 Assign NameType of \"Standard Collections\""^^xsd:string ;
    ] ;
.
<http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/collections_rulesets_and_aggregations---energy_manager_component#Ruleset>
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object "Standard Rulesets" ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasNameType> ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:notExists ;
                sp:elements (
                    [
                      sp:object [
                          sp:varName "val"^^xsd:string ;
                        ] ;
                      sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasNameType> ;
                      sp:subject spin:_this ;
                    ]
                  ) ;
              ] ;
          ]
        ) ;
      rdfs:comment "001 Assign NameType of \"Standard Rulesets\""^^xsd:string ;
    ] ;
.
<http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#ComponentElement>
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#Device> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasPartOfRef> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasComponentRef> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasPartOfRef> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "name"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasName> ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "http://sgt.6/20160614#" ;
                sp:arg2 "Device" ;
                sp:arg3 [
                    sp:varName "name"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    sp:varName "newName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "001 Create a Device if one doesn't exist for this ComponentElement, and bidirectionally link them"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#EMUsagePoint> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate <http://sgt.6/explanations#supportsComponentElement> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "ceName"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasName> ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    rdf:type fn:concat ;
                    sp:arg1 "http://sgt.6/20160614#EMUsagePoint" ;
                    sp:arg2 [
                        sp:varName "ceName"^^xsd:string ;
                      ] ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "002 Create a UsagePoint for this ComponentElement, to be used by all Measurement types."^^xsd:string ;
    ] ;
.
<http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#Device>
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object "Device" ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasNameType> ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:notExists ;
                sp:elements (
                    [
                      sp:object [
                          sp:varName "val"^^xsd:string ;
                        ] ;
                      sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasNameType> ;
                      sp:subject spin:_this ;
                    ]
                  ) ;
              ] ;
          ]
        ) ;
      rdfs:comment "001 Assign NameType of \"Device\""^^xsd:string ;
    ] ;
.
<http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#FSGIMIdentifiedObject>
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object "ASHRAE201 Standard" ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasNameTypeAuthority> ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:notExists ;
                sp:elements (
                    [
                      sp:object [
                          sp:varName "val"^^xsd:string ;
                        ] ;
                      sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasNameTypeAuthority> ;
                      sp:subject spin:_this ;
                    ]
                  ) ;
              ] ;
          ]
        ) ;
      rdfs:comment "001 Assign NameTypeAuthority of \"ASHRAE201 Standard\""^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "localname"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasName> ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:notExists ;
                sp:elements (
                    [
                      sp:object [
                          sp:varName "val"^^xsd:string ;
                        ] ;
                      sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasName> ;
                      sp:subject spin:_this ;
                    ]
                  ) ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type afn:localname ;
                sp:arg1 spin:_this ;
              ] ;
            sp:variable [
                sp:varName "localname"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "003 Assign Name to be the localname if not already set"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "qname"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasMRID> ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:notExists ;
                sp:elements (
                    [
                      sp:object [
                          sp:varName "val"^^xsd:string ;
                        ] ;
                      sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasMRID> ;
                      sp:subject spin:_this ;
                    ]
                  ) ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type smf:qname ;
                sp:arg1 spin:_this ;
              ] ;
            sp:variable [
                sp:varName "qname"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "002 Assign MRID to be the qname if not already set"^^xsd:string ;
    ] ;
.
eiclasses---energy_interoperation_wd36_pr03:delta
  rdf:type eiclasses---energy_interoperation_wd36_pr03:SignalTypeType ;
  rdfs:label ""^^xsd:string ;
.
<http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#EM>
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#EMPresentData> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#hasPresentAggregationDataRef> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate <http://sgt.6/explanations#supportsComponentElement> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/key_energy_manager_concepts---energy_manager_component#AggregationProperties> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newAggPropURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate <http://sgt.6/explanations#supportsComponentElement> ;
            sp:subject [
                sp:varName "newAggPropURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "circuit"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/key_energy_manager_concepts---energy_manager_component#hasCircuitOfAggregationRef> ;
            sp:subject [
                sp:varName "newAggPropURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "hasGen"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/key_energy_manager_concepts---energy_manager_component#hasHasElectricalGenerators> ;
            sp:subject [
                sp:varName "newAggPropURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "hasLoad"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/key_energy_manager_concepts---energy_manager_component#hasHasLoads> ;
            sp:subject [
                sp:varName "newAggPropURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newAggPropURI"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#hasAggregationMetadataRef> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newAggPropURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type rules:subEMsReady ;
                sp:arg1 spin:_this ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type rules:allLoadsConnected ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type rules:allGeneratorsConnected ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type afn:localname ;
                sp:arg1 spin:_this ;
              ] ;
            sp:variable [
                sp:varName "localName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:string-length ;
                sp:arg1 "" ;
              ] ;
            sp:variable [
                sp:varName "index"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:substring ;
                sp:arg1 [
                    sp:varName "localName"^^xsd:string ;
                  ] ;
                sp:arg2 [
                    rdf:type sp:add ;
                    sp:arg1 [
                        sp:varName "index"^^xsd:string ;
                      ] ;
                    sp:arg2 1 ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "name"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "circuit"^^xsd:string ;
              ] ;
            sp:predicate rules:getCircuitsAffectedByThisEM ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:if ;
                sp:arg1 [
                    rdf:type sp:or ;
                    sp:arg1 [
                        rdf:type sp:or ;
                        sp:arg1 [
                            rdf:type rules:doIManageGeneratorsOnThisCircuit ;
                            sp:arg1 spin:_this ;
                            sp:arg2 [
                                sp:varName "circuit"^^xsd:string ;
                              ] ;
                          ] ;
                        sp:arg2 [
                            rdf:type rules:doIManageRoutersOnThisCircuit ;
                            sp:arg1 spin:_this ;
                            sp:arg2 [
                                sp:varName "circuit"^^xsd:string ;
                              ] ;
                          ] ;
                      ] ;
                    sp:arg2 [
                        rdf:type rules:subEMsHaveGenerators ;
                        sp:arg1 spin:_this ;
                      ] ;
                  ] ;
                sp:arg2 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/primitive_data_types---common_primitive_types_classes_and_enumerations#true> ;
                sp:arg3 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/primitive_data_types---common_primitive_types_classes_and_enumerations#false> ;
              ] ;
            sp:variable [
                sp:varName "hasGen"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:if ;
                sp:arg1 [
                    rdf:type sp:or ;
                    sp:arg1 [
                        rdf:type rules:rIsLoadOnCircuit ;
                        sp:arg1 [
                            sp:varName "circuit"^^xsd:string ;
                          ] ;
                      ] ;
                    sp:arg2 [
                        rdf:type rules:subEMsHaveLoads ;
                        sp:arg1 spin:_this ;
                      ] ;
                  ] ;
                sp:arg2 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/primitive_data_types---common_primitive_types_classes_and_enumerations#true> ;
                sp:arg3 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/primitive_data_types---common_primitive_types_classes_and_enumerations#false> ;
              ] ;
            sp:variable [
                sp:varName "hasLoad"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type afn:localname ;
                sp:arg1 [
                    sp:varName "circuit"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "circuitname"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "http://sgt.6/20160614#EMPresentData" ;
                sp:arg2 [
                    sp:varName "name"^^xsd:string ;
                  ] ;
                sp:arg3 [
                    sp:varName "circuitname"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    sp:varName "newName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "http://sgt.6/20160614#AggregationProperties" ;
                sp:arg2 [
                    sp:varName "localName"^^xsd:string ;
                  ] ;
                sp:arg3 [
                    sp:varName "circuitname"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "AggPropName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    sp:varName "AggPropName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newAggPropURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "001 Create PresentAggregationData.EMPresentData and its associated aggregationMetadata.AggregationProperties"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object "EnergyManager" ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasNameType> ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:notExists ;
                sp:elements (
                    [
                      sp:object [
                          sp:varName "val"^^xsd:string ;
                        ] ;
                      sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasNameType> ;
                      sp:subject spin:_this ;
                    ]
                  ) ;
              ] ;
          ]
        ) ;
      rdfs:comment "002 Assign NameType of \"EnergyManager\""^^xsd:string ;
    ] ;
.
<http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#EMPresentData>
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/collections_rulesets_and_aggregations---energy_manager_component#AllResourcesInEMDomain> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "resource"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasPartRef> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#hasPresentResourcesRef> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "em"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#supportsComponentElement> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "em"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#supportsComponentElement> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#EM> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "em"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Union ;
            sp:elements (
                (
                  [
                    sp:object [
                        sp:varName "resource"^^xsd:string ;
                      ] ;
                    sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#hasLoadsRef> ;
                    sp:subject [
                        sp:varName "em"^^xsd:string ;
                      ] ;
                  ]
                )
                (
                  [
                    sp:object [
                        sp:varName "resource"^^xsd:string ;
                      ] ;
                    sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#hasGeneratorsRef> ;
                    sp:subject [
                        sp:varName "em"^^xsd:string ;
                      ] ;
                  ]
                )
                (
                  [
                    sp:object [
                        sp:varName "resource"^^xsd:string ;
                      ] ;
                    sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#hasMetersRef> ;
                    sp:subject [
                        sp:varName "em"^^xsd:string ;
                      ] ;
                  ]
                )
                (
                  [
                    sp:object [
                        sp:varName "resource"^^xsd:string ;
                      ] ;
                    sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#hasEMsRef> ;
                    sp:subject [
                        sp:varName "em"^^xsd:string ;
                      ] ;
                  ]
                )
              ) ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type afn:localname ;
                sp:arg1 [
                    sp:varName "em"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "emName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "http://sgt.6/20160614#Collection" ;
                sp:arg2 [
                    sp:varName "emName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    sp:varName "newName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "002 Create presentResources.AllResourcesInEMDomain (a Collection), and populate the Collection"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/standard_aggregations---collections_rulesets_and_aggregations#DemandAggregation> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#hasPresentAggregateDemandRef> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#hasMeasuredAtRef> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "componentElement"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#supportsComponentElement> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "componentElement"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#supportsComponentElement> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "componentElement"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#supportsComponentElement> ;
            sp:subject [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
          ]
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#EMUsagePoint> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type afn:localname ;
                sp:arg1 spin:_this ;
              ] ;
            sp:variable [
                sp:varName "localName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:string-length ;
                sp:arg1 "EMPresentData" ;
              ] ;
            sp:variable [
                sp:varName "index"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:substring ;
                sp:arg1 [
                    sp:varName "localName"^^xsd:string ;
                  ] ;
                sp:arg2 [
                    rdf:type sp:add ;
                    sp:arg1 [
                        sp:varName "index"^^xsd:string ;
                      ] ;
                    sp:arg2 1 ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "name"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "http://sgt.6/20160614#PresentAggregateDemand" ;
                sp:arg2 [
                    sp:varName "name"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    sp:varName "newName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "001 Create PresentAggregationData.DemandAggregation"^^xsd:string ;
    ] ;
.
<http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#BidirectionalCombiner>
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#BidirectionalCombinerAggregationRuleset> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#hasAggregationRulesetRef> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#BidirectionalCombinerAggregationRuleset> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:if ;
                sp:arg1 [
                    rdf:type sp:exists ;
                    sp:elements (
                        [
                          sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#BidirectionalCombinerAggregationRuleset> ;
                          sp:predicate rdf:type ;
                          sp:subject [
                              sp:varName "ruleset"^^xsd:string ;
                            ] ;
                        ]
                      ) ;
                  ] ;
                sp:arg2 [
                    rdf:type rules:getAnInstanceOfClass ;
                    sp:arg1 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#BidirectionalCombinerAggregationRuleset> ;
                  ] ;
                sp:arg3 [
                    rdf:type spif:buildURI ;
                    sp:arg1 [
                        rdf:type fn:concat ;
                        sp:arg1 "http://sgt.6/20160614#BidirectionalCombinerAggregationRuleset" ;
                      ] ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "001 Create a BidirectionalCombinerAggregationRuleset if one doesn't already exist, and associate the new or existing one with this BidirectionalCombiner"^^xsd:string ;
    ] ;
.
<http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#EnergyRouter>
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#RouterConnectionPoint> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#hasConnection0Ref> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/other_common_classes---common_primitive_types_classes_and_enumerations#hasPartOfRef> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#hasConnection0Ref> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "name"^^xsd:string ;
              ] ;
            sp:predicate rdfs:label ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "http://sgt.6/20160614#" ;
                sp:arg2 "RouterConnectionPoint0" ;
                sp:arg3 [
                    sp:varName "name"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    sp:varName "newName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "002 Create a ConnectionPoint0 if one doesn't exist for this Router"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#RouterConnectionPoint> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#hasConnection1Ref> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/other_common_classes---common_primitive_types_classes_and_enumerations#hasPartOfRef> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#hasConnection1Ref> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "name"^^xsd:string ;
              ] ;
            sp:predicate rdfs:label ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "http://sgt.6/20160614#" ;
                sp:arg2 "RouterConnectionPoint1" ;
                sp:arg3 [
                    sp:varName "name"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    sp:varName "newName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "003 Create a ConnectionPoint1 if one doesn't exist for this Router"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#RouterConnectionPoint> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#hasConnection2Ref> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/other_common_classes---common_primitive_types_classes_and_enumerations#hasPartOfRef> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#hasConnection2Ref> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "name"^^xsd:string ;
              ] ;
            sp:predicate rdfs:label ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "http://sgt.6/20160614#" ;
                sp:arg2 "RouterConnectionPoint2" ;
                sp:arg3 [
                    sp:varName "name"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    sp:varName "newName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "004 Create a ConnectionPoint2 if one doesn't exist for this Router"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "em"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/other_common_classes---common_primitive_types_classes_and_enumerations#hasPartOfRef> ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object spin:_this ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#hasEnergyRouterRef> ;
            sp:subject [
                sp:varName "em"^^xsd:string ;
              ] ;
          ]
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#EM> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "em"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "005 Link back to the owning EM"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "name"^^xsd:string ;
              ] ;
            sp:predicate rdfs:label ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate rdfs:label ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type afn:localname ;
                sp:arg1 spin:_this ;
              ] ;
            sp:variable [
                sp:varName "name"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "001 Create an rdfs:label if it doesn't have one"^^xsd:string ;
    ] ;
.
<http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#GridTransferSwitch>
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#GridTransferSwitchAggregationRuleset> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#hasAggregationRulesetRef> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#GridTransferSwitchAggregationRuleset> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:if ;
                sp:arg1 [
                    rdf:type sp:exists ;
                    sp:elements (
                        [
                          sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#GridTransferSwitchAggregationRuleset> ;
                          sp:predicate rdf:type ;
                          sp:subject [
                              sp:varName "ruleset"^^xsd:string ;
                            ] ;
                        ]
                      ) ;
                  ] ;
                sp:arg2 [
                    rdf:type rules:getAnInstanceOfClass ;
                    sp:arg1 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#GridTransferSwitchAggregationRuleset> ;
                  ] ;
                sp:arg3 [
                    rdf:type spif:buildURI ;
                    sp:arg1 [
                        rdf:type fn:concat ;
                        sp:arg1 "http://sgt.6/20160614#GridTransferSwitchAggregationRuleset" ;
                      ] ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "001 Create a GridTransferSwitchAggregationRuleset if one doesn't already exist, and associate the new or existing one with this GridTransferSwitch"^^xsd:string ;
    ] ;
.
<http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#TransferSwitch>
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#TransferSwitchAggregationRuleset> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#hasAggregationRulesetRef> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#TransferSwitchAggregationRuleset> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:if ;
                sp:arg1 [
                    rdf:type sp:exists ;
                    sp:elements (
                        [
                          sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#TransferSwitchAggregationRuleset> ;
                          sp:predicate rdf:type ;
                          sp:subject [
                              sp:varName "ruleset"^^xsd:string ;
                            ] ;
                        ]
                      ) ;
                  ] ;
                sp:arg2 [
                    rdf:type rules:getAnInstanceOfClass ;
                    sp:arg1 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#TransferSwitchAggregationRuleset> ;
                  ] ;
                sp:arg3 [
                    rdf:type spif:buildURI ;
                    sp:arg1 [
                        rdf:type fn:concat ;
                        sp:arg1 "http://sgt.6/20160614#TransferSwitchAggregationRuleset" ;
                      ] ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "001 Create a TransferSwitchAggregationRuleset if one doesn't already exist, and associate the new or existing one with this TransferSwitch"^^xsd:string ;
    ] ;
.
<http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#UnidirectionalCombiner>
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#UnidirectionalCombinerAggregationRuleset> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#hasAggregationRulesetRef> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#UnidirectionalCombinerAggregationRuleset> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:if ;
                sp:arg1 [
                    rdf:type sp:exists ;
                    sp:elements (
                        [
                          sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#UnidirectionalCombinerAggregationRuleset> ;
                          sp:predicate rdf:type ;
                          sp:subject [
                              sp:varName "ruleset"^^xsd:string ;
                            ] ;
                        ]
                      ) ;
                  ] ;
                sp:arg2 [
                    rdf:type rules:getAnInstanceOfClass ;
                    sp:arg1 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#UnidirectionalCombinerAggregationRuleset> ;
                  ] ;
                sp:arg3 [
                    rdf:type spif:buildURI ;
                    sp:arg1 [
                        rdf:type fn:concat ;
                        sp:arg1 "http://sgt.6/20160614#UnidirectionalCombinerAggregationRuleset" ;
                      ] ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "001 Create a UnidirectionalCombinerAggregationRuleset if one doesn't already exist, and associate the new or existing one with this UnidirectionalCombiner"^^xsd:string ;
    ] ;
.
<http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/generator_component---device_and_model_components#DispatchableGenerator>
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object power_measurements---measurements:PowerMeasurementsSet ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/generator_component---device_and_model_components#hasEligibleSupplyRef> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#hasMeasuredAtRef> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/generator_component---device_and_model_components#hasEligibleSupplyRef> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "name"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasName> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate <http://sgt.6/explanations#supportsComponentElement> ;
            sp:subject [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
          ]
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#EMUsagePoint> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "http://sgt.6/20160614#PowerMeasurementsSet" ;
                sp:arg2 [
                    sp:varName "name"^^xsd:string ;
                  ] ;
                sp:arg3 "EligibleSupply" ;
              ] ;
            sp:variable [
                sp:varName "newName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    sp:varName "newName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "001 Create eligibleSupply.PowerMeasurementsSet and link to UsagePoint"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object power_measurements---measurements:PowerMeasurementsSet ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/generator_component---device_and_model_components#hasGeneratedSupplySetpointRef> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#hasMeasuredAtRef> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/generator_component---device_and_model_components#hasGeneratedSupplySetpointRef> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "name"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasName> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate <http://sgt.6/explanations#supportsComponentElement> ;
            sp:subject [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
          ]
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#EMUsagePoint> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "http://sgt.6/20160614#PowerMeasurementsSet" ;
                sp:arg2 [
                    sp:varName "name"^^xsd:string ;
                  ] ;
                sp:arg3 "GeneratedSupplySetpoint" ;
              ] ;
            sp:variable [
                sp:varName "newName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    sp:varName "newName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "002 Create generatedSupplySetpoint.PowerMeasurementsSet and link to UsagePoint"^^xsd:string ;
    ] ;
.
<http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/generator_component---device_and_model_components#Generator>
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/other_common_classes---common_primitive_types_classes_and_enumerations#ConnectionPoint> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/generator_component---device_and_model_components#hasOutputRef> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/generator_component---device_and_model_components#hasOutputRef> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "name"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasName> ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "http://sgt.6/20160614#" ;
                sp:arg2 "OutputConnectionPoint" ;
                sp:arg3 [
                    sp:varName "name"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    sp:varName "newName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "002 Create an Output ConnectionPoint if one doesn't exist for this Generator"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object power_measurements---measurements:PowerMeasurementsSet ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/generator_component---device_and_model_components#hasActualSupplyRef> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#hasMeasuredAtRef> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/generator_component---device_and_model_components#hasActualSupplyRef> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "name"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasName> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate <http://sgt.6/explanations#supportsComponentElement> ;
            sp:subject [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
          ]
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#EMUsagePoint> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "http://sgt.6/20160614#PowerMeasurementsSet" ;
                sp:arg2 [
                    sp:varName "name"^^xsd:string ;
                  ] ;
                sp:arg3 "ActualSupply" ;
              ] ;
            sp:variable [
                sp:varName "newName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    sp:varName "newName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "003 Create actualSupply.PowerMeasurementsSet and link to UsagePoint"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object "Generator" ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasNameType> ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:notExists ;
                sp:elements (
                    [
                      sp:object [
                          sp:varName "val"^^xsd:string ;
                        ] ;
                      sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasNameType> ;
                      sp:subject spin:_this ;
                    ]
                  ) ;
              ] ;
          ]
        ) ;
      rdfs:comment "001 Assign NameType of \"Generator\""^^xsd:string ;
    ] ;
.
<http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/load_component---device_and_model_components#CurtailableLoad>
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object eiclasses---energy_interoperation_wd36_pr03:FSGIMEventSignalType ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object eiclasses---energy_interoperation_wd36_pr03:delta ;
            sp:predicate eiclasses---energy_interoperation_wd36_pr03:hasSignalTypeRef ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/load_component---device_and_model_components#hasRequestedCurtailmentLevelRef> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate <http://sgt.6/explanations#supportsComponentElement> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/load_component---device_and_model_components#hasRequestedCurtailmentLevelRef> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "name"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasName> ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "http://sgt.6/20160614#" ;
                sp:arg2 [
                    sp:varName "name"^^xsd:string ;
                  ] ;
                sp:arg3 "RequestedCurtailment" ;
              ] ;
            sp:variable [
                sp:varName "newName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    sp:varName "newName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "005 Create RequestedCurtailmentLevel.FSGIMEventSignalType, and set RequestedCurtailmentSignal as \"delta\""^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/load_component---device_and_model_components#CST_CurtailmentInactive> ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/load_component---device_and_model_components#hasCurtailmentStatusRef> ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/load_component---device_and_model_components#hasCurtailmentStatusRef> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
        ) ;
      rdfs:comment "006 Set CurtailmentStatus to Inactive"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object power_measurements---measurements:PowerMeasurementsSet ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/load_component---device_and_model_components#hasActualCurtailedDemandRef> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#hasMeasuredAtRef> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate <http://sgt.6/explanations#supportsComponentElement> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/load_component---device_and_model_components#hasActualCurtailedDemandRef> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "name"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasName> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate <http://sgt.6/explanations#supportsComponentElement> ;
            sp:subject [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
          ]
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#EMUsagePoint> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "http://sgt.6/20160614#PowerMeasurementsSet" ;
                sp:arg2 [
                    sp:varName "name"^^xsd:string ;
                  ] ;
                sp:arg3 "Curtailed" ;
              ] ;
            sp:variable [
                sp:varName "newName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    sp:varName "newName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "001 Create ActualCurtailedDemand.PowerMeasurementsSet and link to UsagePoint"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object power_measurements---measurements:PowerMeasurementsSet ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/load_component---device_and_model_components#hasEligibleCurtailableDemandRef> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#hasMeasuredAtRef> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate <http://sgt.6/explanations#supportsComponentElement> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/load_component---device_and_model_components#hasEligibleCurtailableDemandRef> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "name"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasName> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate <http://sgt.6/explanations#supportsComponentElement> ;
            sp:subject [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
          ]
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#EMUsagePoint> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "http://sgt.6/20160614#PowerMeasurementsSet" ;
                sp:arg2 [
                    sp:varName "name"^^xsd:string ;
                  ] ;
                sp:arg3 "EligibleCurtailableDemand" ;
              ] ;
            sp:variable [
                sp:varName "newName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    sp:varName "newName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "002 Create EligibleCurtailableDemand.PowerMeasurementsSet and link to UsagePoint"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object power_measurements---measurements:PowerMeasurementsSet ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/load_component---device_and_model_components#hasMaximumCurtailableDemandRef> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#hasMeasuredAtRef> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate <http://sgt.6/explanations#supportsComponentElement> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/load_component---device_and_model_components#hasMaximumCurtailableDemandRef> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "name"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasName> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate <http://sgt.6/explanations#supportsComponentElement> ;
            sp:subject [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
          ]
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#EMUsagePoint> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "http://sgt.6/20160614#PowerMeasurementsSet" ;
                sp:arg2 [
                    sp:varName "name"^^xsd:string ;
                  ] ;
                sp:arg3 "MaximumCurtailableDemand" ;
              ] ;
            sp:variable [
                sp:varName "newName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    sp:varName "newName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "003 Create Maximum Curtailable Demand.PowerMeasurementsSet"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object 0 ;
            sp:predicate measurements---common_primitive_types_classes_and_enumerations:hasValue ;
            sp:subject [
                sp:varName "reactiveQuantity"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:TriplePath ;
            sp:object [
                sp:varName "reactiveQuantity"^^xsd:string ;
              ] ;
            sp:path [
                rdf:type sp:SeqPath ;
                sp:path1 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/load_component---device_and_model_components#hasActualCurtailedDemandRef> ;
                sp:path2 power_measurements---measurements:hasQuantityReactivePowerRef ;
              ] ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate measurements---common_primitive_types_classes_and_enumerations:hasValue ;
                  sp:subject [
                      sp:varName "reactiveQuantity"^^xsd:string ;
                    ] ;
                ]
              ) ;
          ]
        ) ;
      rdfs:comment "008 Initialize actual curtailed reactive demand to 0"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object 0 ;
            sp:predicate measurements---common_primitive_types_classes_and_enumerations:hasValue ;
            sp:subject [
                sp:varName "realQuantity"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:TriplePath ;
            sp:object [
                sp:varName "realQuantity"^^xsd:string ;
              ] ;
            sp:path [
                rdf:type sp:SeqPath ;
                sp:path1 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/load_component---device_and_model_components#hasActualCurtailedDemandRef> ;
                sp:path2 power_measurements---measurements:hasQuantityRealPowerRef ;
              ] ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate measurements---common_primitive_types_classes_and_enumerations:hasValue ;
                  sp:subject [
                      sp:varName "realQuantity"^^xsd:string ;
                    ] ;
                ]
              ) ;
          ]
        ) ;
      rdfs:comment "007 Initialize actual curtailed real demand to 0"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object 3600 ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/load_component---device_and_model_components#hasMaximumCurtailTime> ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/load_component---device_and_model_components#hasMaximumCurtailTime> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
        ) ;
      rdfs:comment "004 Set MaximumCurtailTime to 3600"^^xsd:string ;
    ] ;
.
<http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/load_component---device_and_model_components#Load>
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/other_common_classes---common_primitive_types_classes_and_enumerations#ConnectionPoint> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/load_component---device_and_model_components#hasInputRef> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate <http://sgt.6/explanations#supportsComponentElement> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/load_component---device_and_model_components#hasInputRef> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "name"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasName> ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "http://sgt.6/20160614#" ;
                sp:arg2 "ConnectionPoint" ;
                sp:arg3 [
                    sp:varName "name"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    sp:varName "newName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "001 Create a ConnectionPoint if one doesn't exist for this Load"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object power_measurements---measurements:PowerMeasurementsSet ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/load_component---device_and_model_components#hasActualDemandRef> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#hasMeasuredAtRef> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate <http://sgt.6/explanations#supportsComponentElement> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/load_component---device_and_model_components#hasActualDemandRef> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "name"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasName> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate <http://sgt.6/explanations#supportsComponentElement> ;
            sp:subject [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
          ]
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#EMUsagePoint> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "http://sgt.6/20160614#PowerMeasurementsSet" ;
                sp:arg2 [
                    sp:varName "name"^^xsd:string ;
                  ] ;
                sp:arg3 "Actual" ;
              ] ;
            sp:variable [
                sp:varName "newName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    sp:varName "newName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "003 Create ActualDemand.PowerMeasurementsSet and link to UsagePoint"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object "Load" ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasNameType> ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:notExists ;
                sp:elements (
                    [
                      sp:object [
                          sp:varName "val"^^xsd:string ;
                        ] ;
                      sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasNameType> ;
                      sp:subject spin:_this ;
                    ]
                  ) ;
              ] ;
          ]
        ) ;
      rdfs:comment "002 Assign NameType of \"Load\""^^xsd:string ;
    ] ;
.
measurements---common_primitive_types_classes_and_enumerations:MeasurementMetadataType
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/enumerations---common_primitive_types_classes_and_enumerations#SSCT_K> ;
            sp:predicate measurements---common_primitive_types_classes_and_enumerations:hasSiScaleCodeRef ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate measurements---common_primitive_types_classes_and_enumerations:hasSiScaleCodeRef ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
        ) ;
      rdfs:comment "001 Default the SiScaleCode to SSCT_K if it is not already set."^^xsd:string ;
    ] ;
.
measurements---common_primitive_types_classes_and_enumerations:MeasurementQuantity
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "value"^^xsd:string ;
              ] ;
            sp:predicate measurements---common_primitive_types_classes_and_enumerations:hasMeasurementMetadataRef ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "existingVal"^^xsd:string ;
                    ] ;
                  sp:predicate measurements---common_primitive_types_classes_and_enumerations:hasMeasurementMetadataRef ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "type"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "restriction"^^xsd:string ;
              ] ;
            sp:predicate rdfs:subClassOf ;
            sp:subject [
                sp:varName "type"^^xsd:string ;
              ] ;
          ]
          [
            sp:object owl:Restriction ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "restriction"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "range"^^xsd:string ;
              ] ;
            sp:predicate owl:allValuesFrom ;
            sp:subject [
                sp:varName "restriction"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "property"^^xsd:string ;
              ] ;
            sp:predicate owl:onProperty ;
            sp:subject [
                sp:varName "restriction"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type afn:localname ;
                sp:arg1 [
                    sp:varName "property"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "propName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type fn:contains ;
                sp:arg1 [
                    sp:varName "propName"^^xsd:string ;
                  ] ;
                sp:arg2 "hasMeasurementMetadataRef" ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:ne ;
                sp:arg1 [
                    sp:varName "property"^^xsd:string ;
                  ] ;
                sp:arg2 measurements---common_primitive_types_classes_and_enumerations:hasMeasurementMetadataRef ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "value"^^xsd:string ;
              ] ;
            sp:predicate [
                sp:varName "property"^^xsd:string ;
              ] ;
            sp:subject spin:_this ;
          ]
        ) ;
      rdfs:comment "001 Copy hasMeasurementMetadataRef from the redefined property to the overwritten property to avoid a constraint violation"^^xsd:string ;
    ] ;
.
<http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/measures---wx#AbstractMeasure>
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "value"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/measures---wx#hasUomRef> ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "existingVal"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/measures---wx#hasUomRef> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "type"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "restriction"^^xsd:string ;
              ] ;
            sp:predicate rdfs:subClassOf ;
            sp:subject [
                sp:varName "type"^^xsd:string ;
              ] ;
          ]
          [
            sp:object owl:Restriction ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "restriction"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "range"^^xsd:string ;
              ] ;
            sp:predicate owl:allValuesFrom ;
            sp:subject [
                sp:varName "restriction"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "property"^^xsd:string ;
              ] ;
            sp:predicate owl:onProperty ;
            sp:subject [
                sp:varName "restriction"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type afn:localname ;
                sp:arg1 [
                    sp:varName "property"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "propName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type fn:contains ;
                sp:arg1 [
                    sp:varName "propName"^^xsd:string ;
                  ] ;
                sp:arg2 "hasUomRef" ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:ne ;
                sp:arg1 [
                    sp:varName "property"^^xsd:string ;
                  ] ;
                sp:arg2 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/measures---wx#hasUomRef> ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "value"^^xsd:string ;
              ] ;
            sp:predicate [
                sp:varName "property"^^xsd:string ;
              ] ;
            sp:subject spin:_this ;
          ]
        ) ;
      rdfs:comment "001 Copy hasUomRef from the redefined property to the overwritten property to avoid a constraint violation"^^xsd:string ;
    ] ;
.
<http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/meter_component---device_and_model_components#ElectricMeter>
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "flag"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#measuresDemand> ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:exists ;
                sp:elements (
                    [
                      sp:object [
                          sp:varName "entity"^^xsd:string ;
                        ] ;
                      sp:predicate <http://sgt.6/explanations#metersPowerOf> ;
                      sp:subject spin:_this ;
                    ]
                  ) ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:if ;
                sp:arg1 [
                    rdf:type sp:exists ;
                    sp:elements (
                        [
                          rdf:type sp:TriplePath ;
                          sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/generator_component---device_and_model_components#Generator> ;
                          sp:path [
                              rdf:type sp:SeqPath ;
                              sp:path1 [
                                  rdf:type sp:SeqPath ;
                                  sp:path1 <http://sgt.6/explanations#metersPowerOf> ;
                                  sp:path2 rdf:type ;
                                ] ;
                              sp:path2 [
                                  rdf:type sp:ModPath ;
                                  sp:modMax -2 ;
                                  sp:modMin 0 ;
                                  sp:subPath rdfs:subClassOf ;
                                ] ;
                            ] ;
                          sp:subject spin:_this ;
                        ]
                      ) ;
                  ] ;
                sp:arg2 "false"^^xsd:boolean ;
                sp:arg3 "true"^^xsd:boolean ;
              ] ;
            sp:variable [
                sp:varName "flag"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "002 Flag if this Meter can measure Demand (not just Net Demand)"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/other_common_classes---common_primitive_types_classes_and_enumerations#ConnectionPoint> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/meter_component---device_and_model_components#hasInputRef> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate <http://sgt.6/explanations#supportsComponentElement> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/meter_component---device_and_model_components#hasInputRef> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "name"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasName> ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "http://sgt.6/20160614#" ;
                sp:arg2 "InputConnectionPoint" ;
                sp:arg3 [
                    sp:varName "name"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    sp:varName "newName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "001 Create an Input ConnectionPoint if one doesn't exist for this Meter"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/other_common_classes---common_primitive_types_classes_and_enumerations#ConnectionPoint> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/meter_component---device_and_model_components#hasOutputRef> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate <http://sgt.6/explanations#supportsComponentElement> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/meter_component---device_and_model_components#hasOutputRef> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "name"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasName> ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "http://sgt.6/20160614#" ;
                sp:arg2 "OutputConnectionPoint" ;
                sp:arg3 [
                    sp:varName "name"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    sp:varName "newName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "002 Create an Output ConnectionPoint if one doesn't exist for this Meter"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object power_measurements---measurements:PowerMeasurementsSet ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/meter_component---device_and_model_components#hasPowerReadingRef> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#hasMeasuredAtRef> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate <http://sgt.6/explanations#supportsComponentElement> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/meter_component---device_and_model_components#hasPowerReadingRef> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "name"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasName> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate <http://sgt.6/explanations#supportsComponentElement> ;
            sp:subject [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
          ]
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#EMUsagePoint> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "http://sgt.6/20160614#PowerMeasurementsSet" ;
                sp:arg2 [
                    sp:varName "name"^^xsd:string ;
                  ] ;
                sp:arg3 "Actual" ;
              ] ;
            sp:variable [
                sp:varName "newName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    sp:varName "newName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "003 Create powerReading.PowerMeasurementsSet and link to UsagePoint"^^xsd:string ;
    ] ;
  spin:ruleWave2 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "entity"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#metersPowerOf> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "childCircuit"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#metersCircuit> ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:TriplePath ;
            sp:object [
                sp:varName "circuit"^^xsd:string ;
              ] ;
            sp:path [
                rdf:type sp:SeqPath ;
                sp:path1 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/meter_component---device_and_model_components#hasOutputRef> ;
                sp:path2 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/other_common_classes---common_primitive_types_classes_and_enumerations#hasConnectedToRef> ;
              ] ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:TriplePath ;
            sp:object [
                sp:varName "childCircuit"^^xsd:string ;
              ] ;
            sp:path [
                rdf:type sp:ModPath ;
                sp:modMax -2 ;
                sp:modMin 0 ;
                sp:subPath <http://sgt.6/explanations#feedsOrIsAlternateTo> ;
              ] ;
            sp:subject [
                sp:varName "circuit"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Union ;
            sp:elements (
                (
                  [
                    sp:object [
                        sp:varName "entity"^^xsd:string ;
                      ] ;
                    sp:predicate rules:getGeneratorsContributingToCircuit ;
                    sp:subject [
                        sp:varName "childCircuit"^^xsd:string ;
                      ] ;
                  ]
                )
                (
                  [
                    sp:object [
                        sp:varName "entity"^^xsd:string ;
                      ] ;
                    sp:predicate rules:getLoadsContributingToCircuit ;
                    sp:subject [
                        sp:varName "childCircuit"^^xsd:string ;
                      ] ;
                  ]
                )
              ) ;
          ]
        ) ;
      rdfs:comment "001 Associate this Meter with all Loads and Generators that it is metering"^^xsd:string ;
    ] ;
  rdfs:comment "Note that the spin:rule #001 that finds all entities downstream of a meter assumes the spin:ruleWave2 has created the circuit tree that is used in this rule, specifically the tree created via the explain:feedsOrIsAlternateTo property."^^xsd:string ;
.
<http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/meter_component---device_and_model_components#Meter>
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object "Meter" ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasNameType> ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:notExists ;
                sp:elements (
                    [
                      sp:object [
                          sp:varName "val"^^xsd:string ;
                        ] ;
                      sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasNameType> ;
                      sp:subject spin:_this ;
                    ]
                  ) ;
              ] ;
          ]
        ) ;
      rdfs:comment "001 Assign NameType of \"Meter\""^^xsd:string ;
    ] ;
.
<http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/naesb_pap10_eui---iec_cim_naesb_eui_model_20101111update_20120802#RoleFlags>
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "newValue"^^xsd:string ;
              ] ;
            sp:predicate [
                sp:varName "prop"^^xsd:string ;
              ] ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:TriplePath ;
            sp:object [
                sp:varName "prop"^^xsd:string ;
              ] ;
            sp:path [
                rdf:type sp:SeqPath ;
                sp:path1 rdfs:subClassOf ;
                sp:path2 owl:onProperty ;
              ] ;
            sp:subject <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/naesb_pap10_eui---iec_cim_naesb_eui_model_20101111update_20120802#RoleFlags> ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:if ;
                sp:arg1 [
                    rdf:type sp:exists ;
                    sp:elements (
                        [
                          sp:object [
                              sp:varName "val"^^xsd:string ;
                            ] ;
                          sp:predicate [
                              sp:varName "prop"^^xsd:string ;
                            ] ;
                          sp:subject spin:_this ;
                        ]
                      ) ;
                  ] ;
                sp:arg2 [
                    rdf:type rules:getValueOfProperty ;
                    sp:arg1 spin:_this ;
                    sp:arg2 [
                        sp:varName "prop"^^xsd:string ;
                      ] ;
                  ] ;
                sp:arg3 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/primitive_data_types---common_primitive_types_classes_and_enumerations#false> ;
              ] ;
            sp:variable [
                sp:varName "newValue"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "001 Set default value of \"false\" for all the RoleFlags booleans that are unspecified"^^xsd:string ;
    ] ;
.
<http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/naesb_pap10_eui---iec_cim_naesb_eui_model_20101111update_20120802#UsagePoint>
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/naesb_pap10_eui---iec_cim_naesb_eui_model_20101111update_20120802#RoleFlags> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/naesb_pap10_eui---iec_cim_naesb_eui_model_20101111update_20120802#hasRoleFlagsRef> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/naesb_pap10_eui---iec_cim_naesb_eui_model_20101111update_20120802#hasRoleFlagsRef> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type afn:localname ;
                sp:arg1 spin:_this ;
              ] ;
            sp:variable [
                sp:varName "localName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:string-length ;
                sp:arg1 "EMUsagePoint" ;
              ] ;
            sp:variable [
                sp:varName "index"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:substring ;
                sp:arg1 [
                    sp:varName "localName"^^xsd:string ;
                  ] ;
                sp:arg2 [
                    rdf:type sp:add ;
                    sp:arg1 [
                        sp:varName "index"^^xsd:string ;
                      ] ;
                    sp:arg2 1 ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "name"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "http://sgt.6/20160614#RoleFlags" ;
                sp:arg2 [
                    sp:varName "name"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    sp:varName "newName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "001 Create RoleFlags.RoleFlags"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "newValue"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/naesb_pap10_eui---iec_cim_naesb_eui_model_20101111update_20120802#hasStatus> ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:if ;
                sp:arg1 [
                    rdf:type sp:exists ;
                    sp:elements (
                        [
                          sp:object [
                              sp:varName "val"^^xsd:string ;
                            ] ;
                          sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/naesb_pap10_eui---iec_cim_naesb_eui_model_20101111update_20120802#hasStatus> ;
                          sp:subject spin:_this ;
                        ]
                      ) ;
                  ] ;
                sp:arg2 [
                    rdf:type rules:getValueOfProperty ;
                    sp:arg1 spin:_this ;
                    sp:arg2 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/naesb_pap10_eui---iec_cim_naesb_eui_model_20101111update_20120802#hasStatus> ;
                  ] ;
                sp:arg3 1 ;
              ] ;
            sp:variable [
                sp:varName "newValue"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "002 Set status variable to 1 (on) unless already specified"^^xsd:string ;
    ] ;
.
<http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/observation---om1_observation#Observation>
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "value"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/observation---om1_observation#hasFeatureOfInterestRef> ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "existingVal"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/observation---om1_observation#hasFeatureOfInterestRef> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "type"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "restriction"^^xsd:string ;
              ] ;
            sp:predicate rdfs:subClassOf ;
            sp:subject [
                sp:varName "type"^^xsd:string ;
              ] ;
          ]
          [
            sp:object owl:Restriction ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "restriction"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "range"^^xsd:string ;
              ] ;
            sp:predicate owl:allValuesFrom ;
            sp:subject [
                sp:varName "restriction"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "property"^^xsd:string ;
              ] ;
            sp:predicate owl:onProperty ;
            sp:subject [
                sp:varName "restriction"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type afn:localname ;
                sp:arg1 [
                    sp:varName "property"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "propName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type fn:contains ;
                sp:arg1 [
                    sp:varName "propName"^^xsd:string ;
                  ] ;
                sp:arg2 "hasFeatureOfInterestRef" ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:ne ;
                sp:arg1 [
                    sp:varName "property"^^xsd:string ;
                  ] ;
                sp:arg2 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/observation---om1_observation#hasFeatureOfInterestRef> ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "value"^^xsd:string ;
              ] ;
            sp:predicate [
                sp:varName "property"^^xsd:string ;
              ] ;
            sp:subject spin:_this ;
          ]
        ) ;
      rdfs:comment "001 Copy hasFeatureOfInterestRef from the redefined property to the overwritten property to avoid a constraint violation"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "value"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/observation---om1_observation#hasResultRef> ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "existingVal"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/observation---om1_observation#hasResultRef> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "type"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "restriction"^^xsd:string ;
              ] ;
            sp:predicate rdfs:subClassOf ;
            sp:subject [
                sp:varName "type"^^xsd:string ;
              ] ;
          ]
          [
            sp:object owl:Restriction ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "restriction"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "range"^^xsd:string ;
              ] ;
            sp:predicate owl:allValuesFrom ;
            sp:subject [
                sp:varName "restriction"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "property"^^xsd:string ;
              ] ;
            sp:predicate owl:onProperty ;
            sp:subject [
                sp:varName "restriction"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type afn:localname ;
                sp:arg1 [
                    sp:varName "property"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "propName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type fn:contains ;
                sp:arg1 [
                    sp:varName "propName"^^xsd:string ;
                  ] ;
                sp:arg2 "hasResultRef" ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:ne ;
                sp:arg1 [
                    sp:varName "property"^^xsd:string ;
                  ] ;
                sp:arg2 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/observation---om1_observation#hasResultRef> ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "value"^^xsd:string ;
              ] ;
            sp:predicate [
                sp:varName "property"^^xsd:string ;
              ] ;
            sp:subject spin:_this ;
          ]
        ) ;
      rdfs:comment "002 Copy hasResultRef from the redefined property to the overwritten property to avoid a constraint violation"^^xsd:string ;
    ] ;
.
<http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/other_common_classes---common_primitive_types_classes_and_enumerations#Circuit>
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object "Circuit" ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasNameType> ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:notExists ;
                sp:elements (
                    [
                      sp:object [
                          sp:varName "val"^^xsd:string ;
                        ] ;
                      sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasNameType> ;
                      sp:subject spin:_this ;
                    ]
                  ) ;
              ] ;
          ]
        ) ;
      rdfs:comment "001 Assign NameType of \"Circuit\""^^xsd:string ;
    ] ;
  spin:ruleWave2 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "gridParentCircuit"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#isFedByCircuit> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "derParentCircuit"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#isFedByCircuit> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate <http://sgt.6/explanations#feedsCircuit> ;
            sp:subject [
                sp:varName "gridParentCircuit"^^xsd:string ;
              ] ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate <http://sgt.6/explanations#feedsCircuit> ;
            sp:subject [
                sp:varName "derParentCircuit"^^xsd:string ;
              ] ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate <http://sgt.6/explanations#feedsOrIsAlternateTo> ;
            sp:subject [
                sp:varName "gridParentCircuit"^^xsd:string ;
              ] ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate <http://sgt.6/explanations#feedsOrIsAlternateTo> ;
            sp:subject [
                sp:varName "derParentCircuit"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "derParentCircuit"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#feedsOrIsAlternateTo> ;
            sp:subject [
                sp:varName "gridParentCircuit"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "gridParentCircuit"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#feedsOrIsAlternateTo> ;
            sp:subject [
                sp:varName "derParentCircuit"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:TriplePath ;
            sp:object spin:_this ;
            sp:path [
                rdf:type sp:SeqPath ;
                sp:path1 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#hasConnection2Ref> ;
                sp:path2 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/other_common_classes---common_primitive_types_classes_and_enumerations#hasConnectedToRef> ;
              ] ;
            sp:subject [
                sp:varName "router"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:TriplePath ;
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#EnergyRouter> ;
            sp:path [
                rdf:type sp:SeqPath ;
                sp:path1 rdf:type ;
                sp:path2 [
                    rdf:type sp:ModPath ;
                    sp:modMax -2 ;
                    sp:modMin 0 ;
                    sp:subPath rdfs:subClassOf ;
                  ] ;
              ] ;
            sp:subject [
                sp:varName "router"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:TriplePath ;
            sp:object [
                sp:varName "gridParentCircuit"^^xsd:string ;
              ] ;
            sp:path [
                rdf:type sp:SeqPath ;
                sp:path1 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#hasConnection0Ref> ;
                sp:path2 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/other_common_classes---common_primitive_types_classes_and_enumerations#hasConnectedToRef> ;
              ] ;
            sp:subject [
                sp:varName "router"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:TriplePath ;
            sp:object [
                sp:varName "derParentCircuit"^^xsd:string ;
              ] ;
            sp:path [
                rdf:type sp:SeqPath ;
                sp:path1 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energyrouter---energy_manager_component#hasConnection1Ref> ;
                sp:path2 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/other_common_classes---common_primitive_types_classes_and_enumerations#hasConnectedToRef> ;
              ] ;
            sp:subject [
                sp:varName "router"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "002 Connect circuit to feeder circuit via any routers"^^xsd:string ;
    ] ;
  spin:ruleWave2 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "parentCircuit"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#isFedByCircuit> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate <http://sgt.6/explanations#feedsCircuit> ;
            sp:subject [
                sp:varName "parentCircuit"^^xsd:string ;
              ] ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate <http://sgt.6/explanations#feedsOrIsAlternateTo> ;
            sp:subject [
                sp:varName "parentCircuit"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:TriplePath ;
            sp:object spin:_this ;
            sp:path [
                rdf:type sp:SeqPath ;
                sp:path1 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/meter_component---device_and_model_components#hasOutputRef> ;
                sp:path2 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/other_common_classes---common_primitive_types_classes_and_enumerations#hasConnectedToRef> ;
              ] ;
            sp:subject [
                sp:varName "meter"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:TriplePath ;
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/meter_component---device_and_model_components#ElectricMeter> ;
            sp:path [
                rdf:type sp:SeqPath ;
                sp:path1 rdf:type ;
                sp:path2 [
                    rdf:type sp:ModPath ;
                    sp:modMax -2 ;
                    sp:modMin 0 ;
                    sp:subPath rdfs:subClassOf ;
                  ] ;
              ] ;
            sp:subject [
                sp:varName "meter"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:TriplePath ;
            sp:object [
                sp:varName "parentCircuit"^^xsd:string ;
              ] ;
            sp:path [
                rdf:type sp:SeqPath ;
                sp:path1 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/meter_component---device_and_model_components#hasInputRef> ;
                sp:path2 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/other_common_classes---common_primitive_types_classes_and_enumerations#hasConnectedToRef> ;
              ] ;
            sp:subject [
                sp:varName "meter"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "001 Connect circuit to feeder circuit via any meters"^^xsd:string ;
    ] ;
  rdfs:comment "Note that the rule to generate the circuit tree is a ruleWave2 rule, which assumes that all connections have been made for meters and routers during ruleWave1 so that the circuits can be traversed."^^xsd:string ;
.
power_measurements---measurements:PowerApparentQuantity
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object power_measurements---measurements:PowerApparentQuantityRuleset ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate power_measurements---measurements:hasApparentPowerAggregationRulesRef ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate power_measurements---measurements:hasApparentPowerAggregationRulesRef ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:if ;
                sp:arg1 [
                    rdf:type sp:exists ;
                    sp:elements (
                        [
                          sp:object power_measurements---measurements:PowerApparentQuantityRuleset ;
                          sp:predicate rdf:type ;
                          sp:subject [
                              sp:varName "apparentRuleset"^^xsd:string ;
                            ] ;
                        ]
                      ) ;
                  ] ;
                sp:arg2 [
                    rdf:type rules:getAnInstanceOfClass ;
                    sp:arg1 power_measurements---measurements:PowerApparentQuantityRuleset ;
                  ] ;
                sp:arg3 [
                    rdf:type spif:buildURI ;
                    sp:arg1 [
                        rdf:type fn:concat ;
                        sp:arg1 "http://sgt.6/20160614#PowerApparentQuantityRuleset" ;
                      ] ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "002 Create a PowerApparentQuantityRuleset if one doesn't already exist, and associate the new or existing one with this PowerApparentQuantity"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object power_measurements---measurements:PowerApparentType ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object "ApparentPower" ;
            sp:predicate measurements---common_primitive_types_classes_and_enumerations:hasItemDescription ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/enumerations---common_primitive_types_classes_and_enumerations#USK_VA> ;
            sp:predicate measurements---common_primitive_types_classes_and_enumerations:hasItemUnitsRef ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate power_measurements---measurements:hasMeasurementMetadataRef ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate power_measurements---measurements:hasMeasurementMetadataRef ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type afn:localname ;
                sp:arg1 spin:_this ;
              ] ;
            sp:variable [
                sp:varName "localName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:string-length ;
                sp:arg1 "PowerApparentQuantity" ;
              ] ;
            sp:variable [
                sp:varName "index"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:substring ;
                sp:arg1 [
                    sp:varName "localName"^^xsd:string ;
                  ] ;
                sp:arg2 [
                    rdf:type sp:add ;
                    sp:arg1 [
                        sp:varName "index"^^xsd:string ;
                      ] ;
                    sp:arg2 1 ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "name"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "http://sgt.6/20160614#PowerApparentType" ;
                sp:arg2 [
                    sp:varName "name"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    sp:varName "newName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "001 Create MeasurementMetadata.PowerApparentType"^^xsd:string ;
    ] ;
.
power_measurements---measurements:PowerMeasurementsSet
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object power_measurements---measurements:PowerApparentQuantity ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate power_measurements---measurements:hasQuantityApparentPowerRef ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#hasMeasuredAtRef> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate power_measurements---measurements:hasQuantityApparentPowerRef ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#hasMeasuredAtRef> ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type afn:localname ;
                sp:arg1 spin:_this ;
              ] ;
            sp:variable [
                sp:varName "localName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:string-length ;
                sp:arg1 "PowerMeasurementsSet" ;
              ] ;
            sp:variable [
                sp:varName "index"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:substring ;
                sp:arg1 [
                    sp:varName "localName"^^xsd:string ;
                  ] ;
                sp:arg2 [
                    rdf:type sp:add ;
                    sp:arg1 [
                        sp:varName "index"^^xsd:string ;
                      ] ;
                    sp:arg2 1 ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "name"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "http://sgt.6/20160614#PowerApparentQuantity" ;
                sp:arg2 [
                    sp:varName "name"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    sp:varName "newName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "003 Create QuantityApparentPower.PowerApparentQuantity"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object power_measurements---measurements:PowerMeasurementRuleset ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate power_measurements---measurements:hasPowerAggregationRulesRef ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate power_measurements---measurements:hasPowerAggregationRulesRef ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:if ;
                sp:arg1 [
                    rdf:type sp:exists ;
                    sp:elements (
                        [
                          sp:object power_measurements---measurements:PowerMeasurementRuleset ;
                          sp:predicate rdf:type ;
                          sp:subject [
                              sp:varName "reactiveRuleset"^^xsd:string ;
                            ] ;
                        ]
                      ) ;
                  ] ;
                sp:arg2 [
                    rdf:type rules:getAnInstanceOfClass ;
                    sp:arg1 power_measurements---measurements:PowerMeasurementRuleset ;
                  ] ;
                sp:arg3 [
                    rdf:type spif:buildURI ;
                    sp:arg1 [
                        rdf:type fn:concat ;
                        sp:arg1 "http://sgt.6/20160614#PowerMeasurementRuleset" ;
                      ] ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "004 Create a PowerMeasurementRuleset if one doesn't already exist, and associate the new or existing one with this PowerMeasurementSet"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object power_measurements---measurements:PowerReactiveQuantity ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate power_measurements---measurements:hasQuantityReactivePowerRef ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#hasMeasuredAtRef> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate power_measurements---measurements:hasQuantityReactivePowerRef ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#hasMeasuredAtRef> ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type afn:localname ;
                sp:arg1 spin:_this ;
              ] ;
            sp:variable [
                sp:varName "localName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:string-length ;
                sp:arg1 "PowerMeasurementsSet" ;
              ] ;
            sp:variable [
                sp:varName "index"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:substring ;
                sp:arg1 [
                    sp:varName "localName"^^xsd:string ;
                  ] ;
                sp:arg2 [
                    rdf:type sp:add ;
                    sp:arg1 [
                        sp:varName "index"^^xsd:string ;
                      ] ;
                    sp:arg2 1 ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "name"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "http://sgt.6/20160614#PowerReactiveQuantity" ;
                sp:arg2 [
                    sp:varName "name"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    sp:varName "newName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "002 Create QuantityReactivePower.PowerReactiveQuantity"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object power_measurements---measurements:PowerRealQuantity ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate power_measurements---measurements:hasQuantityRealPowerRef ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#hasMeasuredAtRef> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate power_measurements---measurements:hasQuantityRealPowerRef ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#hasMeasuredAtRef> ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type afn:localname ;
                sp:arg1 spin:_this ;
              ] ;
            sp:variable [
                sp:varName "localName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:string-length ;
                sp:arg1 "PowerMeasurementsSet" ;
              ] ;
            sp:variable [
                sp:varName "index"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:substring ;
                sp:arg1 [
                    sp:varName "localName"^^xsd:string ;
                  ] ;
                sp:arg2 [
                    rdf:type sp:add ;
                    sp:arg1 [
                        sp:varName "index"^^xsd:string ;
                      ] ;
                    sp:arg2 1 ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "name"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "http://sgt.6/20160614#PowerRealQuantity" ;
                sp:arg2 [
                    sp:varName "name"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    sp:varName "newName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "001 Create QuantityRealPower.PowerRealQuantity"^^xsd:string ;
    ] ;
.
power_measurements---measurements:PowerReactiveQuantity
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object power_measurements---measurements:PowerReactiveQuantityRuleset ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate power_measurements---measurements:hasReactivePowerAggregationRulesRef ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate power_measurements---measurements:hasReactivePowerAggregationRulesRef ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:if ;
                sp:arg1 [
                    rdf:type sp:exists ;
                    sp:elements (
                        [
                          sp:object power_measurements---measurements:PowerReactiveQuantityRuleset ;
                          sp:predicate rdf:type ;
                          sp:subject [
                              sp:varName "reactiveRuleset"^^xsd:string ;
                            ] ;
                        ]
                      ) ;
                  ] ;
                sp:arg2 [
                    rdf:type rules:getAnInstanceOfClass ;
                    sp:arg1 power_measurements---measurements:PowerReactiveQuantityRuleset ;
                  ] ;
                sp:arg3 [
                    rdf:type spif:buildURI ;
                    sp:arg1 [
                        rdf:type fn:concat ;
                        sp:arg1 "http://sgt.6/20160614#PowerReactiveQuantityRuleset" ;
                      ] ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "002 Create a PowerReactiveQuantityRuleset if one doesn't already exist, and associate the new or existing one with this PowerReactiveQuantity"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object power_measurements---measurements:PowerReactiveType ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object "ReactivePower" ;
            sp:predicate measurements---common_primitive_types_classes_and_enumerations:hasItemDescription ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/enumerations---common_primitive_types_classes_and_enumerations#USK_Var> ;
            sp:predicate measurements---common_primitive_types_classes_and_enumerations:hasItemUnitsRef ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate power_measurements---measurements:hasMeasurementMetadataRef ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate power_measurements---measurements:hasMeasurementMetadataRef ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type afn:localname ;
                sp:arg1 spin:_this ;
              ] ;
            sp:variable [
                sp:varName "localName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:string-length ;
                sp:arg1 "PowerReactiveQuantity" ;
              ] ;
            sp:variable [
                sp:varName "index"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:substring ;
                sp:arg1 [
                    sp:varName "localName"^^xsd:string ;
                  ] ;
                sp:arg2 [
                    rdf:type sp:add ;
                    sp:arg1 [
                        sp:varName "index"^^xsd:string ;
                      ] ;
                    sp:arg2 1 ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "name"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "http://sgt.6/20160614#PowerReactiveType" ;
                sp:arg2 [
                    sp:varName "name"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    sp:varName "newName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "001 Create MeasurementMetadata.PowerReactiveType"^^xsd:string ;
    ] ;
.
power_measurements---measurements:PowerRealQuantity
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object power_measurements---measurements:PowerRealQuantityRuleset ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate power_measurements---measurements:hasRealPowerAggregationRulesRef ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate power_measurements---measurements:hasRealPowerAggregationRulesRef ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:if ;
                sp:arg1 [
                    rdf:type sp:exists ;
                    sp:elements (
                        [
                          sp:object power_measurements---measurements:PowerRealQuantityRuleset ;
                          sp:predicate rdf:type ;
                          sp:subject [
                              sp:varName "reactiveRuleset"^^xsd:string ;
                            ] ;
                        ]
                      ) ;
                  ] ;
                sp:arg2 [
                    rdf:type rules:getAnInstanceOfClass ;
                    sp:arg1 power_measurements---measurements:PowerRealQuantityRuleset ;
                  ] ;
                sp:arg3 [
                    rdf:type spif:buildURI ;
                    sp:arg1 [
                        rdf:type fn:concat ;
                        sp:arg1 "http://sgt.6/20160614#PowerRealQuantityRuleset" ;
                      ] ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "002 Create a PowerRealQuantityRuleset if one doesn't already exist, and associate the new or existing one with this PowerRealQuantity"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object power_measurements---measurements:PowerRealQuantityRuleset ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate power_measurements---measurements:hasRealPowerAggregationRulesRef ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate power_measurements---measurements:hasRealPowerAggregationRulesRef ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:if ;
                sp:arg1 [
                    rdf:type sp:exists ;
                    sp:elements (
                        [
                          sp:object power_measurements---measurements:PowerRealQuantityRuleset ;
                          sp:predicate rdf:type ;
                          sp:subject [
                              sp:varName "reactiveRuleset"^^xsd:string ;
                            ] ;
                        ]
                      ) ;
                  ] ;
                sp:arg2 [
                    rdf:type rules:getAnInstanceOfClass ;
                    sp:arg1 power_measurements---measurements:PowerRealQuantityRuleset ;
                  ] ;
                sp:arg3 [
                    rdf:type spif:buildURI ;
                    sp:arg1 [
                        rdf:type fn:concat ;
                        sp:arg1 "http://sgt.6/20160614#PowerRealQuantityRuleset" ;
                      ] ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "004 Create a DemandRuleset if one doesn't already exist, and associate the new or existing one with this DemandAggregation"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object power_measurements---measurements:PowerRealType ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object "RealPower" ;
            sp:predicate measurements---common_primitive_types_classes_and_enumerations:hasItemDescription ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/enumerations---common_primitive_types_classes_and_enumerations#USK_W> ;
            sp:predicate measurements---common_primitive_types_classes_and_enumerations:hasItemUnitsRef ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate power_measurements---measurements:hasMeasurementMetadataRef ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate power_measurements---measurements:hasMeasurementMetadataRef ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type afn:localname ;
                sp:arg1 spin:_this ;
              ] ;
            sp:variable [
                sp:varName "localName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:string-length ;
                sp:arg1 "PowerRealQuantity" ;
              ] ;
            sp:variable [
                sp:varName "index"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:substring ;
                sp:arg1 [
                    sp:varName "localName"^^xsd:string ;
                  ] ;
                sp:arg2 [
                    rdf:type sp:add ;
                    sp:arg1 [
                        sp:varName "index"^^xsd:string ;
                      ] ;
                    sp:arg2 1 ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "name"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "http://sgt.6/20160614#PowerRealType" ;
                sp:arg2 [
                    sp:varName "name"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    sp:varName "newName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "001 Create MeasurementMetadata.PowerRealType"^^xsd:string ;
    ] ;
.
power_measurements---measurements:PowerThermalQuantity
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object power_measurements---measurements:PowerThermalType ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object "ThermalPower" ;
            sp:predicate measurements---common_primitive_types_classes_and_enumerations:hasItemDescription ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate power_measurements---measurements:hasMeasurementMetadataRef ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate power_measurements---measurements:hasMeasurementMetadataRef ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type afn:localname ;
                sp:arg1 spin:_this ;
              ] ;
            sp:variable [
                sp:varName "localName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:string-length ;
                sp:arg1 "PowerThermalQuantity" ;
              ] ;
            sp:variable [
                sp:varName "index"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:substring ;
                sp:arg1 [
                    sp:varName "localName"^^xsd:string ;
                  ] ;
                sp:arg2 [
                    rdf:type sp:add ;
                    sp:arg1 [
                        sp:varName "index"^^xsd:string ;
                      ] ;
                    sp:arg2 1 ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "name"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "http://sgt.6/20160614#PowerThermalType" ;
                sp:arg2 [
                    sp:varName "name"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    sp:varName "newName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "001 Create MeasurementMetadata.PowerThermalType"^^xsd:string ;
    ] ;
.
power_measurements---measurements:PowerThermalTypeWatts
  rdf:type power_measurements---measurements:PowerThermalType ;
  measurements---common_primitive_types_classes_and_enumerations:hasItemDescription "ThermalPower"^^<http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/primitive_data_types---common_primitive_types_classes_and_enumerations#String> ;
  measurements---common_primitive_types_classes_and_enumerations:hasItemUnitsRef <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/enumerations---common_primitive_types_classes_and_enumerations#USK_W> ;
  measurements---common_primitive_types_classes_and_enumerations:hasSiScaleCodeRef <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/enumerations---common_primitive_types_classes_and_enumerations#SSCT_K> ;
  rdfs:label "PowerThermalTypeInstance"^^xsd:string ;
.
<http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/standard_aggregations---collections_rulesets_and_aggregations#DemandAggregation>
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object power_measurements---measurements:PowerMeasurementsSet ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/standard_aggregations---collections_rulesets_and_aggregations#hasAggregateQuantityRef> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#hasMeasuredAtRef> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "componentElement"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#supportsComponentElement> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "componentElement"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#supportsComponentElement> ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/standard_aggregations---collections_rulesets_and_aggregations#hasAggregateQuantityRef> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "usagePoint"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/energy_manager_component---device_and_model_components#hasMeasuredAtRef> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "name"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/device---device_and_model_components#hasName> ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type fn:concat ;
                sp:arg1 "http://sgt.6/20160614#PowerMeasurementsSet" ;
                sp:arg2 [
                    sp:varName "name"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newName"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:buildURI ;
                sp:arg1 [
                    sp:varName "newName"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "002 Create AggregateQuantity.PowerMeasurementsSet"^^xsd:string ;
    ] ;
  spin:ruleWave1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/standard_aggregations---collections_rulesets_and_aggregations#DemandRuleset> ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "newURI"^^xsd:string ;
              ] ;
            sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/standard_aggregations---collections_rulesets_and_aggregations#hasAggregationRulesetRef> ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#createdBy> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "componentElement"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#supportsComponentElement> ;
            sp:subject [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "owningClass"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "componentElement"^^xsd:string ;
              ] ;
            sp:predicate <http://sgt.6/explanations#supportsComponentElement> ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "val"^^xsd:string ;
                    ] ;
                  sp:predicate <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/standard_aggregations---collections_rulesets_and_aggregations#hasAggregationRulesetRef> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:if ;
                sp:arg1 [
                    rdf:type sp:exists ;
                    sp:elements (
                        [
                          sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/standard_aggregations---collections_rulesets_and_aggregations#DemandRuleset> ;
                          sp:predicate rdf:type ;
                          sp:subject [
                              sp:varName "reactiveRuleset"^^xsd:string ;
                            ] ;
                        ]
                      ) ;
                  ] ;
                sp:arg2 [
                    rdf:type rules:getAnInstanceOfClass ;
                    sp:arg1 <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/standard_aggregations---collections_rulesets_and_aggregations#DemandRuleset> ;
                  ] ;
                sp:arg3 [
                    rdf:type spif:buildURI ;
                    sp:arg1 [
                        rdf:type fn:concat ;
                        sp:arg1 "http://sgt.6/20160614#DemandRuleset" ;
                      ] ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newURI"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "003 Create a DemandRuleset if one doesn't already exist, and associate the new or existing one with this DemandAggregation"^^xsd:string ;
    ] ;
.
[
  rdf:type sp:Union ;
  sp:elements (
      (
        [
          rdf:type sp:TriplePath ;
          sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/load_component---device_and_model_components#Load> ;
          sp:path [
              rdf:type sp:SeqPath ;
              sp:path1 rdf:type ;
              sp:path2 [
                  rdf:type sp:ModPath ;
                  sp:modMax -2 ;
                  sp:modMin 0 ;
                  sp:subPath rdfs:subClassOf ;
                ] ;
            ] ;
          sp:subject [
              sp:varName "componentElement"^^xsd:string ;
            ] ;
        ]
      )
      (
        [
          rdf:type sp:TriplePath ;
          sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/meter_component---device_and_model_components#Meter> ;
          sp:path [
              rdf:type sp:SeqPath ;
              sp:path1 rdf:type ;
              sp:path2 [
                  rdf:type sp:ModPath ;
                  sp:modMax -2 ;
                  sp:modMin 0 ;
                  sp:subPath rdfs:subClassOf ;
                ] ;
            ] ;
          sp:subject [
              sp:varName "componentElement"^^xsd:string ;
            ] ;
        ]
      )
      (
        [
          rdf:type sp:TriplePath ;
          sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/generator_component---device_and_model_components#Generator> ;
          sp:path [
              rdf:type sp:SeqPath ;
              sp:path1 rdf:type ;
              sp:path2 [
                  rdf:type sp:ModPath ;
                  sp:modMax -2 ;
                  sp:modMin 0 ;
                  sp:subPath rdfs:subClassOf ;
                ] ;
            ] ;
          sp:subject [
              sp:varName "componentElement"^^xsd:string ;
            ] ;
        ]
      )
    ) ;
].
[
  rdf:type sp:Union ;
  sp:elements (
      (
        [
          rdf:type sp:TriplePath ;
          sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/load_component---device_and_model_components#Load> ;
          sp:path [
              rdf:type sp:SeqPath ;
              sp:path1 rdf:type ;
              sp:path2 [
                  rdf:type sp:ModPath ;
                  sp:modMax -2 ;
                  sp:modMin 0 ;
                  sp:subPath rdfs:subClassOf ;
                ] ;
            ] ;
          sp:subject [
              sp:varName "componentElement"^^xsd:string ;
            ] ;
        ]
      )
      (
        [
          rdf:type sp:TriplePath ;
          sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/meter_component---device_and_model_components#Meter> ;
          sp:path [
              rdf:type sp:SeqPath ;
              sp:path1 rdf:type ;
              sp:path2 [
                  rdf:type sp:ModPath ;
                  sp:modMax -2 ;
                  sp:modMin 0 ;
                  sp:subPath rdfs:subClassOf ;
                ] ;
            ] ;
          sp:subject [
              sp:varName "componentElement"^^xsd:string ;
            ] ;
        ]
      )
      (
        [
          rdf:type sp:TriplePath ;
          sp:object <http://uml.linkedmodels.org/sg/schema/fsgim.rofficial/submodels/generator_component---device_and_model_components#Generator> ;
          sp:path [
              rdf:type sp:SeqPath ;
              sp:path1 rdf:type ;
              sp:path2 [
                  rdf:type sp:ModPath ;
                  sp:modMax -2 ;
                  sp:modMin 0 ;
                  sp:subPath rdfs:subClassOf ;
                ] ;
            ] ;
          sp:subject [
              sp:varName "componentElement"^^xsd:string ;
            ] ;
        ]
      )
    ) ;
].
[
  rdf:type sp:Union ;
  sp:elements (
      (
        [
          sp:object spin:_this ;
          sp:predicate [
              sp:varName "someRelation"^^xsd:string ;
            ] ;
          sp:subject [
              sp:varName "componentElement"^^xsd:string ;
            ] ;
        ]
      )
      (
        [
          sp:object spin:_this ;
          sp:predicate [
              sp:varName "someRelation"^^xsd:string ;
            ] ;
          sp:subject [
              sp:varName "someMeasurementSet"^^xsd:string ;
            ] ;
        ]
        [
          sp:object [
              sp:varName "someMeasurementSet"^^xsd:string ;
            ] ;
          sp:predicate [
              sp:varName "someOtherRelation"^^xsd:string ;
            ] ;
          sp:subject [
              sp:varName "componentElement"^^xsd:string ;
            ] ;
        ]
      )
    ) ;
].
[
  rdf:type sp:Union ;
  sp:elements (
      (
        [
          sp:object spin:_this ;
          sp:predicate [
              sp:varName "someRelation"^^xsd:string ;
            ] ;
          sp:subject [
              sp:varName "componentElement"^^xsd:string ;
            ] ;
        ]
      )
      (
        [
          sp:object spin:_this ;
          sp:predicate [
              sp:varName "someRelation"^^xsd:string ;
            ] ;
          sp:subject [
              sp:varName "someMeasurementSet"^^xsd:string ;
            ] ;
        ]
        [
          sp:object [
              sp:varName "someMeasurementSet"^^xsd:string ;
            ] ;
          sp:predicate [
              sp:varName "someOtherRelation"^^xsd:string ;
            ] ;
          sp:subject [
              sp:varName "componentElement"^^xsd:string ;
            ] ;
        ]
      )
    ) ;
].
